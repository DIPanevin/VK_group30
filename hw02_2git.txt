HW 02.2 GIT Homework 

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
- стоит
Создан аккаунт в GitHub
- создан

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.
https://github.com/DIPanevin/VK_group30.git


JSON
 4. Создать внешний репозиторий c названием JSON.
на GitHub "Создать новый репозиторий" - JSON
 
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/DIPanevin/JSON.git JSON
 
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json
 
 7. Добавить файл под гит.
git add new.json
 
 8. Закоммитить файл.
git commit -a -m "add new.json"
 
 9. Отправить файл на внешний GitHub репозиторий.
git push origin main
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
INSERT
{
"FirstName":"Dmitriy",
"Surname":"Panevin",
"MiddleName":"Igorevich",
"PetCount":0,
"DesiredSalary":150000
}
ESC
:wq 

 11. Отправить изменения на внешний репозиторий.
git commit -a -m "append new.json" 
git push origin main
 
 12. Создать файл preferences.json
touch preferences.json 
 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
INSERT
{
"FavoriteData":
	{
	"Film":"Dikari",
	"Series":"Umbrella Academy",
	"Meal":"Roasted chicken",
	"Season":"Summer",
	},
"CountryToVisit":"Norway"
} 
ESC
:wq 
 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim skills.json 
INSERT
{
"Acquired":
	{
	"SoftSkills": ["flexibility","communication","lead ability","positivity"],
	"HardSkills": ["JSON","JavaScript","Postman","Jira","Agile","Terminal","GIT","Python","Charles","SQL","HTML"]
	}
}
ESC
:wq
 
 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -a -m "add prefences.json and skills.json" 
git push origin main
 
 16. На веб интерфейсе создать файл bug_report.json.
 Создать новый файл
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Сохранить изменения
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
"Type":"bug report",
"Header":
  {
  "ID":1,
  "Status":"created",
  "Severity":"critical",
  "BugSummary":"Login form hasn't OK button"
  }
"Body":
  {
  "ReproduceSteps":["Run application","Wait while login form loaded"],
  "Result":"login form loaded, but there isn't OK button",
  "ExpectedResult":"login form loaded, OK button is on the right bottom corner of form"
  }
}
 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранить изменения 
 
 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
Создать новый репозиторий. 

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/DIPanevin/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML
touch new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -a -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
git push origin main

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
INSERT
<?xml version="1.0" encoding="windows-1251"?>
<UserInfo>
   <FirstName>Dmitriy</FirstName>
   <Surname>Panevin</Surname>
   <MiddleName>Igorevich</MiddleName>
   <PetCount>0</PetCount>
   <DesiredSalary>150000</DesiredSalary>
</UserInfo>
ESC
:wq

 28. Отправить изменения на внешний репозиторий.
git commit -a -m "append new.xml"
git push origin main

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
INSERT
<?xml version="1.0" encoding="windows-1251"?>
<Preferences>
   <FavoriteData>
      <Film>Dikari</Film>
      <Series>Umbrella Academy</Series>
      <Meal>Roasted chicken</Meal>
      <Season>Summer</Summer>
   </FavoriteData>
   <CountryToVisit>Norway</CountryToVisit>
</Preferences>
ESC
:wq 


 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
vim skills.xml
INSERT
<?xml version="1.0" encoding="windows-1251"?>
<Acquired>
   <SoftSkills>
      <SS01>flexibility</SS01>
      <SS02>communication</SS02>
      <SS03>lead ability</SS03>
      <SS04>positivity</SS04>
   </SoftSkills>
   <HardSkills>
      <HS01>JSON</HS01>
      <HS02>JavaScript</HS02>
      <HS03>Postman</HS03>
      <HS04>Jira</HS04>
      <HS05>Agile</HS05>
      <HS06>Terminal<HS06>
      <HS07>GIT</HS07>
      <HS08>Python</HS08>
      <HS09>Charles</HS09>
      <HS10>SQL</HS10>
      <HS11>HTML</HS11>
   </Hardskills>
</Acquired>
ESC
:wq

 32. Сделать коммит в одну строку.
git add -A && git commit -a -m "add preferences.xml and skills.xml"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push origin main

 34. На веб интерфейсе создать файл bug_report.xml.
Создать новый файл
Имя - bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранить

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Редактировать файл bug_report.xml
<?xml version="1.0" encoding="windows-1251"?>
<Data>
   <Type>bug report</Type>
   <Header>
      <ID>1</ID>
      <Status>created</Status>
      <Severity>critical</Severity>
      <BugSummary>Login form hasn't OK button</BugSummary>
   </Header>
   <Body>
     <ReproduceSteps>
        <Step01>Run application</Step01>
        <Step02>Wait while login form loaded</Step02>
     </ReproduceSteps>
     <Result>login form loaded, but there isn't OK button</Result>
     <ExpectedResult>login form loaded, OK button is on the right bottom corner of form</ExpectedResult>
   </Body>
</Data>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранить изменения

 38. Синхронизировать внешний и локальный репозиторий XML
git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
Создать новый репозиторий с именем TXT


 2. Клонировать репозиторий TXT на локальный компьютер.
https://github.com/DIPanevin/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
cd TXT
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -a -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
git push origin main

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt
INSERT
UserInfo
FirstName: Dmitriy
Surname: Panevin
MiddleName: Igorevich
PetCount: 0
DesiredSalary: 150000
ESC
:wq


 8. Отправить изменения на внешний репозиторий.
git commit -a -m "append new.txt" && git push origin main

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
INSERT
FavoriteData
Film: Dikari
Series: Umbrella Academy
Meal: Roasted chicken
Season: Summer
CountryToVisit: Norway
ESC
:wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
vim skills.txt
INSERT
AcquiredSkills
SoftSkills: flexibility, communication, lead ability, positivity
HardSkills: JSON, JavaScript, Postman, Jira, Agile, Terminal, GIT, Python, Charles, SQL, HTML
ESC
:wq


 12. Сделать коммит в одну строку.
git add -A && git commit -a -m "add preferences.txt and skills.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push origin main

 14. На веб интерфейсе создать файл bug_report.txt.
Создать новый файл
Имя - bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранить изменения

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Редактировать файл bug_report.txt
Bug report

   Header
  
      ID: 1
      Status: created

      Severity: critical
      BugSummary: Login form hasn't OK button


   Body
      ReproduceSteps:
         1. Run application
         2. Wait while login form loaded
   
   Result: login form loaded, but there isn't OK button
      ExpectedResult: login form loaded, OK button is on the right bottom corner of form


 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранить изменения

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull
